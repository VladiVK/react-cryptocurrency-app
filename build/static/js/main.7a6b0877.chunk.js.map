{"version":3,"sources":["reducers/cryptos.reducer.js","contexts/CryptosContext.js","components/SearchBar.js","components/PriceChart.js","components/CryptosTable.js","components/LoaderComp.js","components/Cryptos.js","components/CryptoDetail.js","components/App.js","index.js"],"names":["cryptosReducer","state","action","type","loading","error","searchTerm","cryptos","payload","filters","sortKey","value","isReverse","map","item","defaultValue","CryptosContext","createContext","CryptosProvider","props","useReducer","cryptoReducer","dispatch","useEffect","axios","get","then","response","cryptoData","data","slice","catch","e","Provider","children","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","HideOnScroll","window","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","SearchBar","classes","history","useHistory","useState","inputValue","setInputValue","isFilters","setIsFilters","useContext","sort","find","el","handleSort","console","log","className","AppBar","Toolbar","IconButton","edge","aria-label","onClick","push","Typography","variant","noWrap","prev","InputBase","onChange","placeholder","input","inputProps","Container","style","fontSize","culcChartColor","parsedValue","Intl","NumberFormat","format","replace","Number","PriceChart","price","priceChanges","priceChangesPct","name","uv","isPositive","culcStartPoint","culcIsPositive","pv","amt","dataKey","stroke","margin","small","middle","large","flexBasis","resizedCell","paddingRight","dataObj","key","percentageValue","priceChangesColor","parseFloat","getMarketData","currency","getCellName","obj","isReverseKey","keyName","specials","SORTS","NONE","list","NAME","sortBy","PRICE","a","b","MARKET_CAP","market_cap","withWidth","localList","sortFunction","initialList","length","filter","coin","toLowerCase","includes","sortedCryptos","reverse","TableContainer","component","Paper","Table","TableHead","TableRow","Hidden","only","TableCell","align","TableBody","crypto","id","maxWidth","rank","Box","flexDirection","Avatar","src","logo_url","to","textDecoration","price_change","price_change_pct","alignSelf","LoaderComp","top","left","bottom","right","CircularProgress","Cryptos","Grid","container","xs","sm","getPrice","CryptoDetail","match","useRouteMatch","params","details","Card","CardHeader","avatar","subheader","CardContent","circulating_supply","Button","size","marginTop","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a6b0877.chunk.js","sourcesContent":["/*   cryptos: [...state.cryptos].filter( coin => (\r\n                    coin.name.toLowerCase().includes(action.payload.toLowerCase()))\r\n                )  */\r\n\r\nconst cryptosReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        loading: false,\r\n        error: false,\r\n        searchTerm: '',\r\n        cryptos: [...action.payload],\r\n        filters: [\r\n            {sortKey: 'NONE', value: true, isReverse: false},\r\n            {sortKey: 'PRICE', value: false, isReverse: false},\r\n            {sortKey: 'MARKET_CAP', value: false, isReverse: false},\r\n            {sortKey: 'NAME', value: false, isReverse: false},\r\n        ],\r\n      };\r\n    case 'FETCH_ERROR':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: 'Something went wrong!',\r\n      };\r\n    case 'SEARCH_TERM':\r\n      return {\r\n        ...state,\r\n        searchTerm: action.payload,\r\n      };\r\n    case 'SET_FILTERS':\r\n      return {\r\n        ...state,\r\n        filters: [...state.filters]\r\n          .map( item => item.sortKey === action.payload.sortKey\r\n            ? action.payload\r\n            : {...item, value: false})     \r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default cryptosReducer;\r\n","import React, {useReducer, createContext, useEffect} from 'react'\r\nimport cryptoReducer from '../reducers/cryptos.reducer'\r\nimport axios from 'axios';\r\n\r\n// const DEMO_KEY = 'demo-26240835858194712a4f8cc0dc635c7a'\r\n// const API_KEY = 'ae04d4b6ed06b87563e71f31fd10bc23'\r\n// const BASE_URL = 'https://api.nomics.com/v1/currencies/ticker?'\r\nconst URL = `https://api.nomics.com/v1/currencies/ticker?key=ae04d4b6ed06b87563e71f31fd10bc23&interval=1d,7d,30d&convert=USD`\r\n\r\nconst defaultValue = {\r\n    cryptos: [],\r\n    loading: true,\r\n    error: '',\r\n    searchTerm: '',\r\n    filters: [\r\n        {sortKey: 'NONE', value: true, isReverse: false},\r\n        {sortKey: 'PRICE', value: false, isReverse: false},\r\n        {sortKey: 'MARKET_CAP', value: false, isReverse: false},\r\n        {sortKey: 'NAME', value: false, isReverse: false},\r\n    ]\r\n    \r\n};   \r\n\r\n\r\nexport const CryptosContext = createContext();\r\n\r\nexport const CryptosProvider = (props) => {\r\n   \r\n    const [state, dispatch] = useReducer(cryptoReducer, defaultValue)\r\n\r\n \r\n\r\n    useEffect( () => {\r\n        axios\r\n            \r\n            .get(URL)\r\n            .then( response => {\r\n                const cryptoData = response.data.slice(0,100)\r\n                dispatch({type: 'FETCH_SUCCESS', payload: cryptoData})\r\n            })\r\n            .catch( e => dispatch({type: 'FECTH_ERROR'}) )  \r\n    }, [])\r\n\r\n    return (\r\n        <CryptosContext.Provider value={[state, dispatch]}>\r\n            {props.children}\r\n        </CryptosContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useState, useContext, useEffect } from 'react';\r\n\r\nimport {useHistory, withRouter} from 'react-router-dom'\r\n\r\nimport {CryptosContext} from '../contexts/CryptosContext'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TimelineRoundedIcon from '@material-ui/icons/TimelineRounded';\r\nimport Container from '@material-ui/core/Container'\r\n\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport SortByAlphaIcon from '@material-ui/icons/SortByAlpha';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction='down' in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  window: PropTypes.func,\r\n};\r\n\r\nconst SearchBar = (props) => {\r\n  const classes = useStyles();\r\n\r\n  // router hook\r\n  const history = useHistory();\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const [isFilters, setIsFilters] = useState(false);\r\n\r\n  const [state, dispatch] = useContext(CryptosContext);\r\n\r\n  const handleInput = e => setInputValue( e.target.value);\r\n\r\n  const sort = state.filters.find( el => el.value === true);\r\n\r\n  const handleSort = (sortKey) => {\r\n    const isReverse = (sort.sortKey === sortKey) && (sort.isReverse === false);\r\n    dispatch({\r\n      type: 'SET_FILTERS',\r\n      payload: {sortKey: sortKey, value: true, isReverse: isReverse}\r\n    })\r\n    \r\n  };\r\n\r\n  useEffect( () => {\r\n      dispatch({type: 'SEARCH_TERM', payload: inputValue})\r\n  }, [inputValue, dispatch] )\r\n\r\n  console.log('SearchBar RERENDER...');\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n     \r\n      <HideOnScroll {...props}>\r\n        <AppBar>\r\n          <Toolbar>\r\n           \r\n            <IconButton\r\n              \r\n              edge='start'\r\n              className={classes.menuButton}\r\n              color='inherit'\r\n              aria-label='open drawer'\r\n              onClick={ () => history.push('/')}\r\n            > \r\n              <TimelineRoundedIcon />\r\n              \r\n            </IconButton>\r\n\r\n            <Typography className={classes.title} variant='h6' noWrap>\r\n              Cryptos Market Digest\r\n            </Typography>\r\n\r\n            <IconButton\r\n              color='inherit'\r\n              onClick={ () => setIsFilters( prev => !prev) }\r\n            >\r\n              <FilterListIcon />\r\n            </IconButton>\r\n\r\n            <div className={classes.search}>\r\n              \r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                value={inputValue}\r\n                onChange={handleInput}\r\n\r\n                placeholder='Search…'\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ 'aria-label': 'search' }}\r\n              />\r\n            </div>\r\n          </Toolbar>\r\n          {\r\n            isFilters && \r\n              <Container style={{display: 'flex', alignItems: 'center'}}>\r\n                <Typography variant='subtitle1' display='inline'>Sort By: </Typography>\r\n\r\n                <IconButton onClick={() => handleSort('NAME')} style={{color: 'white'}}>\r\n                  <SortByAlphaIcon fontSize='small' />\r\n                </IconButton>\r\n\r\n                <IconButton onClick={() => handleSort('PRICE')} style={{color: 'white'}}>\r\n                  <AttachMoneyIcon fontSize='small' />\r\n                </IconButton>\r\n\r\n                <IconButton  onClick={() => handleSort('MARKET_CAP')} style={{color: 'white'}}>\r\n                  <AccountBalanceIcon fontSize='small' />\r\n                </IconButton>\r\n              </Container>\r\n          }\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      <Toolbar />\r\n    </div>\r\n  );\r\n};\r\n// export default withRouter(SearchBar) ;\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport { LineChart, Line } from 'recharts';\r\n\r\n\r\nconst culcIsPositive = (value) => {\r\n  switch (true) {\r\n    case value > 0:\r\n      return true;\r\n    case value < 0:\r\n      return false;\r\n    default:\r\n      return true;\r\n  }\r\n};\r\nconst culcChartColor = (value) => {\r\n  let parsedValue = new Intl.NumberFormat('en-US', { style: 'percent' })\r\n    .format(value)\r\n    .replace('%', '');\r\n  parsedValue = (parsedValue === '-0') ? 0 : Number(parsedValue);\r\n\r\n  switch (true) {\r\n    case parsedValue > 0:\r\n      return '#35c935';\r\n    case parsedValue < 0:\r\n      return '#f01818';\r\n    default:\r\n      return '#5c5c5c';\r\n  }\r\n};\r\nconst culcStartPoint = (isPositive, price, priceChanges) =>\r\n  isPositive\r\n    ? Number(price) - Number(priceChanges)\r\n    : Number(price) + Number(priceChanges.replace('-', ''));\r\n\r\n\r\nconst PriceChart = ({ price, priceChanges, priceChangesPct }) => {\r\n  const isPositive = culcIsPositive(priceChanges);\r\n  const startPoint = culcStartPoint(isPositive, price, priceChanges);\r\n  const data = [\r\n    { name: 'Page A', uv: startPoint, pv: 300, amt: 300 },\r\n    { name: 'Page B', uv: price, pv: 300, amt: 300 },\r\n  ];\r\n\r\n  return (\r\n    \r\n      <LineChart width={100} height={40} data={data}>\r\n        <Line\r\n          type='monotone'\r\n          dataKey='uv'\r\n          stroke={culcChartColor(priceChangesPct)}\r\n        />\r\n      </LineChart>\r\n    \r\n  );\r\n};\r\n\r\nexport default PriceChart;\r\n\r\n","import React, { useContext } from 'react';\r\nimport { CryptosContext } from '../contexts/CryptosContext';\r\nimport PriceChart from './PriceChart';\r\nimport {Link} from 'react-router-dom'\r\n// lodash\r\nimport { sortBy } from 'lodash';\r\n// Material-UI\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// Hidden component Material UI\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  middle: {\r\n    width: theme.spacing(4),\r\n    height: theme.spacing(4),\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n  flexBasis: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n  },\r\n  resizedCell: {\r\n    paddingLeft: '10px',\r\n    paddingRight: 0,\r\n  },\r\n}));\r\n\r\nconst priceChanges = (dataObj, key) => {\r\n  let percentageValue = 'NA';\r\n\r\n  if (dataObj) {\r\n    percentageValue = new Intl.NumberFormat('en-US', {\r\n      style: 'percent',\r\n    }).format(dataObj[key]);\r\n    return percentageValue === '-0%' ? '0%' : percentageValue;\r\n  }\r\n  return percentageValue;\r\n};\r\nconst priceChangesColor = (dataObj, key) => {\r\n  if (!dataObj) return 'red';\r\n\r\n  if (dataObj) {\r\n    const value = parseFloat(priceChanges(dataObj, key));\r\n\r\n    switch (true) {\r\n      case value === 0:\r\n        return 'black';\r\n      case value > 0:\r\n        return '#35c935';\r\n      case value < 0:\r\n        return '#f01818';\r\n      default:\r\n        return 'black';\r\n    }\r\n  } else {\r\n    return 'black';\r\n  }\r\n};\r\nconst getMarketData = (dataObj, key) => {\r\n  const marketCap = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n  }).format(dataObj[key]);\r\n\r\n  return marketCap;\r\n};\r\nconst getCellName = (obj, sortKey, isReverseKey, keyName, name, specials = null) => {\r\n  \r\n  return (\r\n    obj[sortKey] !== keyName ? name : obj[isReverseKey] ?\r\n        <span>{name} &uarr; {specials? specials[0] : null}</span>\r\n        : <span>{name} &darr; {specials? specials[1] : null}</span> \r\n     ) \r\n}\r\n\r\n\r\nconst SORTS = {\r\n  NONE: (list) => list,\r\n  NAME: (list) => sortBy(list, 'name'), \r\n  PRICE: (list) => list.sort((a, b) => a.price - b.price),\r\n  MARKET_CAP: (list) => list.sort((a, b) => a.market_cap - b.market_cap),\r\n};\r\n\r\n// Component\r\nconst CryptosTable = () => {\r\n\r\n  console.log('CryptosTable... RENDER')\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [state, dispatch] = useContext(CryptosContext);\r\n\r\n  const localList = [...state.cryptos];\r\n\r\n  const sort = state.filters.find( el => el.value === true);\r\n  //{sortKey: 'NONE', value: true, isReverse: false},\r\n\r\n  const handleSort = (sortKey) => {\r\n    const isReverse = (sort.sortKey === sortKey) && (sort.isReverse === false);\r\n    dispatch({\r\n      type: 'SET_FILTERS',\r\n      payload: {sortKey: sortKey, value: true, isReverse: isReverse}\r\n    })\r\n    \r\n  };\r\n\r\n  const sortFunction = SORTS[sort.sortKey];\r\n  \r\n  const createList = () => {\r\n    if(state.searchTerm.length === 0) return localList\r\n    return localList.filter( coin => (\r\n        coin.name.toLowerCase().includes(state.searchTerm.toLowerCase() )\r\n      )\r\n    )\r\n  }\r\n // initial list by search condition or as it is\r\n  const initialList = createList();\r\n\r\n  const sortedCryptos = sort.isReverse\r\n    ? sortFunction( initialList ).reverse()\r\n    : sortFunction( initialList );\r\n\r\n\r\n  return (\r\n    <TableContainer component={Paper} >\r\n      <Table aria-label='simple table'>\r\n        <TableHead>\r\n          <TableRow>\r\n\r\n            <Hidden only={['xs', 'sm']}>\r\n              <TableCell>Rank</TableCell>\r\n            </Hidden>\r\n\r\n            <TableCell \r\n              className={classes.resizedCell}\r\n              align='left'\r\n              onClick={ () => handleSort('NAME')}\r\n             >\r\n              { getCellName(sort, 'sortKey', 'isReverse', 'NAME', 'Name', ['z-a', 'a-z']) }\r\n            </TableCell>\r\n            \r\n            <TableCell align='left' style={{paddingLeft: 0}}>\r\n              Chart (24h)\r\n            </TableCell>\r\n\r\n            <Hidden only={['xs', 'sm']}>\r\n              <TableCell \r\n                className={classes.resizedCell}\r\n                align='left'\r\n                onClick={() => handleSort('MARKET_CAP')}\r\n              >\r\n              { getCellName(sort, 'sortKey', 'isReverse', 'MARKET_CAP', 'Market Cap') }\r\n               \r\n              </TableCell>\r\n            </Hidden>\r\n            <TableCell\r\n              align='left'\r\n              className={classes.resizedCell}\r\n              onClick={() => handleSort('PRICE')}\r\n            >\r\n              { getCellName(sort, 'sortKey', 'isReverse', 'PRICE', 'Price') }\r\n           \r\n            </TableCell>\r\n\r\n            <Hidden only='xs'>\r\n              <TableCell className={classes.resizedCell} align='left'>Changes</TableCell>\r\n            </Hidden>\r\n\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        <TableBody>\r\n          {sortedCryptos.map((crypto) => (\r\n            <TableRow key={crypto.id}>\r\n\r\n            <Hidden only={['xs', 'sm']}>\r\n              <TableCell align='left' style={{ maxWidth: '0.8rem' }} >\r\n                {crypto.rank}\r\n              </TableCell>\r\n            </Hidden>\r\n\r\n              <TableCell align='left' className={`${classes.resizedCell}`}>\r\n               \r\n                <Box style={{ display: 'flex', flexDirection: 'column' }}>\r\n\r\n                  <Box style={{ display: 'flex'}}>\r\n                    \r\n                    <Avatar\r\n                      style={{ display: 'inline-block', marginRight: '0.5rem' }}\r\n                      src={crypto.logo_url}\r\n                      className={classes.middle}\r\n                    />\r\n                    \r\n                    <Typography variant='overline'>{crypto.currency}</Typography>\r\n                    \r\n                    \r\n                  </Box>\r\n\r\n                  <Link to={`/${crypto.id}`} style={{textDecoration: 'none', color: 'inherit'}}>\r\n                    <Typography variant='subtitle2'>{crypto.name}</Typography>\r\n                  </Link>\r\n\r\n                </Box>\r\n              </TableCell>\r\n\r\n              <TableCell align='left' style={{paddingLeft: 0, marginLeft: 0}} >\r\n               <Box style={{display: 'flex', flexDirection: 'column', alignItems: 'flex-start'}}>\r\n                {!crypto['1d'] ? (\r\n                  <Typography  style={{color: 'red', alignSelf: 'center'}}>NA</Typography>\r\n                ) : (\r\n                    <>\r\n                      <PriceChart\r\n                        price={crypto.price}\r\n                        priceChanges={crypto['1d'].price_change}\r\n                        priceChangesPct={crypto['1d'].price_change_pct}\r\n                      />\r\n                      <Typography variant='body2' style={{color: 'gray', alignSelf: 'center'}}>\r\n                        24h\r\n                      </Typography> \r\n                    </>\r\n                )}\r\n                </Box>\r\n              </TableCell>\r\n\r\n              <Hidden only={['xs', 'sm']}>\r\n                <TableCell align='left'>\r\n                  <Typography variant='subtitle1'>\r\n                    {getMarketData(crypto, 'market_cap')}\r\n                  </Typography>\r\n                </TableCell>\r\n              </Hidden>\r\n\r\n              <TableCell align='left' className={classes.resizedCell}>\r\n                <Typography variant='subtitle1'>\r\n                  {getMarketData(crypto, 'price')}\r\n                </Typography>\r\n\r\n                <Hidden only={['sm', 'md', 'lg', 'xl']}>\r\n\r\n                  <Typography\r\n                    variant='body2'\r\n                    style={{\r\n                      color: priceChangesColor(crypto['1d'], 'price_change_pct'),\r\n                      paddingLeft: '1rem'\r\n                    }}\r\n                  >\r\n                    {`${priceChanges(crypto['1d'], 'price_change_pct')} `}\r\n                    <span style={{color: 'gray'}}>1d</span>\r\n                  </Typography>\r\n\r\n                  <Typography\r\n                    variant='body2'\r\n                    style={{\r\n                      color: priceChangesColor(crypto['30d'], 'price_change_pct'),\r\n                      paddingLeft: '1rem'\r\n                    }}\r\n                  >\r\n                    {`${priceChanges(crypto['30d'], 'price_change_pct')} `}\r\n                    <span style={{color: 'gray'}}>30d</span>\r\n                  </Typography>\r\n\r\n                </Hidden>\r\n\r\n              </TableCell>\r\n\r\n              <Hidden only='xs'>\r\n                <TableCell align='left' >\r\n                  <Typography\r\n                    variant='subtitle1'\r\n                    style={{color: priceChangesColor(crypto['1d'], 'price_change_pct')}}\r\n                  >\r\n                    {`${priceChanges(crypto['1d'], 'price_change_pct')} `}\r\n                    <span style={{color: 'gray'}}>(1 day)</span>\r\n                  </Typography>\r\n                  <Typography\r\n                    variant='subtitle1'\r\n                    style={{color: priceChangesColor(crypto['30d'], 'price_change_pct')}}\r\n                  >\r\n                  {`${priceChanges(crypto['30d'], 'price_change_pct')} `}\r\n                    <span style={{color: 'gray'}}>(30 days)</span>\r\n                  </Typography>\r\n                </TableCell>\r\n              </Hidden>\r\n\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nCryptosTable.propTypes = {\r\n  width: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs']).isRequired,\r\n};\r\n\r\nexport default  withWidth()(CryptosTable);\r\n","import React from 'react';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\nconst LoaderComp = () => {\r\n    return (\r\n        <Box \r\n            top={0}\r\n            left={0}\r\n            bottom={0}\r\n            right={0}\r\n            position=\"absolute\"\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n        >\r\n            <CircularProgress />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default LoaderComp\r\n","import React, { useContext } from 'react';\r\nimport { CryptosContext } from '../contexts/CryptosContext';\r\n\r\n// components\r\nimport CryptosTable from './CryptosTable';\r\nimport LoaderComp from './LoaderComp';\r\n\r\n// Material-UI\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst Cryptos = (props) => {\r\n  const [state] = useContext(CryptosContext);\r\n  console.log(props)\r\n  return (\r\n    <Grid container direction='column'>\r\n      {state.loading && <LoaderComp />}\r\n      {state.error && <h1>{state.error}</h1>}\r\n      {!state.loading && !state.error && (\r\n        <>\r\n\r\n          <Grid item container>\r\n            <Grid item xs={false} sm={1} />\r\n            <Grid item xs={12} sm={10}>\r\n              <Typography\r\n                align='center'\r\n                variant='h5'\r\n                style={{margin: '1.6rem 1rem'}}\r\n              >\r\n                Top 100 Cryptos by Market Cap\r\n              </Typography>\r\n              <CryptosTable />\r\n            </Grid>\r\n            <Grid item xs={false} sm={1} />\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Cryptos;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Link, useRouteMatch, useHistory} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport {CryptosContext} from '../contexts/CryptosContext';\r\nimport LoaderComp from './LoaderComp';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Avatar,\r\n  Typography,\r\n  CardContent,\r\n  Box,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\n// const URL = `https://api.nomics.com/v1/currencies/ticker?key=ae04d4b6ed06b87563e71f31fd10bc23`;\r\n\r\nconst getPrice = (dataObj, key) => {\r\n  let price = 'NA';\r\n\r\n  if (dataObj) {\r\n    price = new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n    }).format(dataObj[key]);\r\n  }\r\n\r\n  return price;\r\n};\r\nconst CryptoDetail = () => {\r\n\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n  \r\n// const [crypto, setCrypto] = useState(null);\r\n  const [state, dispatch] = useContext(CryptosContext);\r\n  const crypto = state.cryptos.find( coin => coin.id === match.params.id)\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(`${URL}&ids=${match.params.id}&interval=1d,30d&convert=USD`)\r\n//       .then((res) => setCrypto(res.data[0]));\r\n//   }, []);\r\n\r\n  const details = crypto ? (\r\n    <Card>\r\n      <CardHeader\r\n        avatar={<Avatar src={crypto.logo_url} />}\r\n        title={crypto.currency}\r\n        subheader={crypto.name}\r\n      />\r\n      <CardContent>\r\n\r\n        <Box style={{ display: 'flex' }}>\r\n          <Typography style={{ marginRight: '10px' }} variant='h5'>\r\n            Price:\r\n          </Typography>\r\n          <Typography variant='h6'>{getPrice(crypto, 'price')}</Typography>\r\n        </Box>\r\n\r\n        <Box style={{ display: 'flex' }}>\r\n          <Typography style={{ marginRight: '10px' }} variant='h5'>\r\n            Market Cap:\r\n          </Typography>\r\n          <Typography variant='h6'>{getPrice(crypto, 'market_cap')}</Typography>\r\n        </Box>\r\n\r\n        <Box style={{ display: 'flex' }}>\r\n          <Typography style={{ marginRight: '10px' }} variant='h5'>\r\n            Market Rank:\r\n          </Typography>\r\n          <Typography variant='h6'>#{crypto.rank}</Typography>\r\n        </Box>\r\n\r\n        <Box style={{ display: 'flex' }}>\r\n          <Typography style={{ marginRight: '10px' }} variant='h5'>\r\n            Circulating:\r\n          </Typography>\r\n          <Typography variant='h6'>{crypto.circulating_supply}</Typography>\r\n        </Box>\r\n\r\n        <Button \r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          style={{marginTop: '1rem'}}\r\n          onClick={ () => history.push('/')}\r\n        >\r\n          go back\r\n        </Button>\r\n\r\n        \r\n\r\n      </CardContent>\r\n    </Card>\r\n  ) : (\r\n    <LoaderComp />\r\n  );\r\n\r\n  return <div>{details}</div>;\r\n};\r\n\r\nexport default CryptoDetail;\r\n","import React from 'react';\n\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport {CryptosProvider} from '../contexts/CryptosContext'\nimport SearchBar from './SearchBar';\nimport Cryptos from './Cryptos';\nimport CryptoDetail from './CryptoDetail';\n\n\n\nconst App = () => {\n  \n  return (\n    <Router>\n      <CryptosProvider>\n          <SearchBar />\n        <Switch>\n          <Route path='/' exact component={Cryptos} /> \n          <Route path='/:id' component={CryptoDetail} /> \n        </Switch>\n      </CryptosProvider>\n    </Router>\n  )\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}